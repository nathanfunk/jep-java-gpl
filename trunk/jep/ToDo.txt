- add more JUnit tests

== Web site todo ====================================================
 - feature request?

== Phone call =======================================================
Notes
 - agreed to change everything to GPL
 - move towards strongly typed approach
   enable before evaluation complex
 - changing SymbolTable to Map?
 - use GroupJep/rationals for arbitrary precision math?

== Further todos ====================================================
 - somehow get around having ParserDumpVisitor referencing Sun's COPYRIGHT file (which doesn't exist)
   (e.g. don't use ParserDumpVisitor, upgrade to JavaCC 4...)
 - add to license agreement that JUnit is included and that source
   code is available from web site
    - include common public license
 - move applicable examples to jepexamples
 - ensure EvaluatorVisitor reports multiple errors for one evaluation
   (use list of errors rather than throwing exceptions)
 - change Functions and Operators documentation. That table just has too
   much empty space
 - JUnit with ANT http://www-106.ibm.com/developerworks/library/j-ant/?dwzone=java
 - comparison needs to be more flexible with complex type ((i-i) == 0)
 - add to features, that it is "easy to integrate in your project"
 - add max(), min(), avg() methods
 - add example for multiple arguments to the documentation
 - extend build.xml to automatically generate commercial package
 - automate purchase with download of licensed file
 - allow dumpvisitor to show values of function nodes and variables
 - allow custom symbol tables (Map interface only in 1.2 - talk with dude)
 - add list of reference companies that use JEP to web site
 - add exp function
 - make case sensitivity optional
 - think about adding a "static double getValue(String expr) throws Exception"
 - add support for delimited identifiers (suggestion from Ralph Harnden)
 - new example applet, show gray-scale image with function evaluated at
 - check out caligula http://www.home.foni.net/~wkurz/caligula/caligula.htm
 - complete applying new code convention to complex class
 - update Parser.jjt and JEP for smooth configuration optioning
 - optimize evaluation
 - look at 330 design patterns and see whether some might be useful
 - test error output (e.g. i == 2 -> type conflict)
 - handle type conflicts in advance
 - look at digital signing of jars
 - protect jars/applets from running on other domains.
http://www.javaworld.com/javaworld/jw-12-1996/jw-12-int.property.html
 - compare features with the french guy's site, and plan to match important capabilities
 - add applet for displaying expression trees
 - automaticize web site uploading/cvs

-- Mamala -----------------------------------------------------------
 - use <apply></apply> instead (content MathML?)
 - allow download from JEP web site?

== User Wish List ===================================================
 - Mathematica link with J/Link by importing Expr expressions.

== Release Check List ===============================================
 - Run all tests
 - use "ant dist"
 - Update download page
 - Update license
 - Download package and test
 - add jep-x.xx-withexamples.jar to website folder
 - Update documentation with new features
 - Run spell check on changed pages
 - Test web site in multiple browsers
 - Upload new distribution file(s)
 - Upload license pdf
 - Upload web site
 - Add message on SourceForge list
 - Update version number+ feature list from JARS, share*it,...
 - Add CVS tag for version (e.g. v-3-0-0)

