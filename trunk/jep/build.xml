<!--
=============================================================================
  build.xml (ant build script)

  JEP - Java Expression Parser
  http://jep.sourceforge.net

  Requirements for compiling JEP with the ant build tool
    1. Ant is installed (http://jakarta.apache.org/ant/)
    2. The optional tasks for ant are installed
    3. JavaCC is installed (http://www.webgain.com/products/java_cc/)
    4. The classes.zip file for the Sun JDK 1.1.8 is on your system

  Setting up your system to compile JEP:
    1. Set the JAVACCHOME environment variable to the location of the
       library directory of JavaCC (e.g. C:\apps\javacc\bin\lib)
    2. Set the value of the "bootclasspath" variable in this script to the
       location of the classes.zip file.
=============================================================================
-->

<project name="JEP" default="compile" basedir=".">
	
	<!-- set global properties for this build -->
	<property name="src" value="src"/>
	<property name="build"   value="build"/>
	<property name="dist"    value="dist"/>
	<property name="doc"     value="doc"/>
	<property name="version" value="2.23"/>
	<property name="jar"     value="${app.name}-${version}.jar"/>
	<property name="src.zip" value="${app.name}-${version}-src.zip"/>
	<property name="src.tar.gz" value="${app.name}-${version}-src.tar.gz"/>
	<property name="disttemp"   value="disttemp"/>
	<property environment="env"/>
	<property name="javacchome" value="${env.JAVACCHOME}"/>
	<property name="bootclasspath" value="c:\jdk1.1.8\lib\classes.zip"/>

	<taskdef name="jjtree"
	classname="org.apache.tools.ant.taskdefs.optional.javacc.JJTree" />

	<taskdef name="javacc"
	classname="org.apache.tools.ant.taskdefs.optional.javacc.JavaCC" />

<!--======================================================================-->
<!-- INIT -->
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>

		<!-- Ensure JavaCC is present -->
		<available property="javacc.present"
			classname="COM.sun.labs.javacc.Main"
			classpath="${javacchome}/JavaCC.zip" />
	</target>

<!--======================================================================-->
<!-- JJTREE -->
	<target name="jjtree" depends="init" if="javacc.present">
		<jjtree
			target="${src}/org/nfunk/jep/Parser.jjt"
			javacchome="${javacchome}"
		/>
	</target>

<!--======================================================================-->
<!-- JAVACC -->
	<target name="javacc" depends="jjtree">
		<javacc
			target="${src}/org/nfunk/jep/Parser.jj"
			javacchome="${javacchome}"
		/>
	</target>

      
<!--======================================================================-->
<!-- COMPILE -->
	<target name="compile" depends="javacc">
		<!-- Create the build directory -->
		<mkdir dir="${build}"/>

		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}"
		       destdir="${build}"
		       target="1.1">
			<bootclasspath>
				<pathelement path="${bootclasspath}"/>
			</bootclasspath>
		</javac>
	</target>


<!--======================================================================-->
<!-- JAVADOC -->
	<target name="javadoc" depends="init">
		<mkdir dir="${doc}/javadoc"/>
		<javadoc packagenames="org.nfunk.jep.*"
				sourcepath="src"
				destdir="${doc}/javadoc"
				windowtitle="JEP API">
			<bottom><![CDATA[<A HREF=\"http://jep.sourceforge.net\" TARGET=\"_blank\">http://jep.sourceforge.net</A> Copyright &#169; 2000 Nathan Funk]]></bottom>
		</javadoc>
	</target>

<!--======================================================================-->
<!-- DIST -->
	<target name="dist" depends="compile,javadoc">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}"/>

		<!-- Put everything in ${build} into the jep-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/jep-${version}.jar"
		     basedir="${build}"
		     includes="org/nfunk/jep/**"/>
		
		<!-- Examples jar -->
		<jar jarfile="${dist}/jep-${version}-withexamples.jar"
		     basedir="${build}"
		     includes="org/nfunk/jep/**,org/nfunk/jepexamples/**"/>
		
		<!-- Create a temp dir and copy all jar+source+doc -->
		<mkdir dir="${disttemp}"/>
		<copy file="${dist}/jep-${version}.jar" todir="${disttemp}"/>
		<copy todir="${disttemp}">
		      <fileset dir="."
			       includes="src/org/nfunk/jep/**,
					 src/org/nfunk/jepexamples/**,
					 doc/**,
					 bin/**,
					 build.xml,
					 compile.bat,
					 LICENSE.txt"/>
		</copy>

		<!-- zip file -->
		<delete file="${dist}/jep-${version}.zip"/>
		<zip zipfile="${dist}/jep-${version}.zip"
		     basedir="${disttemp}"
		     >
		</zip>

		<!-- tar.gz file -->
		<delete file="${dist}/jep-${version}.tar.gz"/>
		<tar tarfile="${dist}/jep-${version}.tar"
		     basedir="${disttemp}"
		     >
		</tar>
		<gzip zipfile="${dist}/jep-${version}.tar.gz"
		      src="${dist}/jep-${version}.tar"/>

		<!-- clean up temporary files -->
		<delete file="${dist}/jep-${version}.tar"/>
		<delete dir="${disttemp}" />
	</target>


<!--======================================================================-->
<!-- CLEAN -->
	<target name="clean">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>


<!--======================================================================-->
<!-- EOLUNIX -->
	<target name="eolunix">
		<fixcrlf srcdir="${src}"
			eol="lf" eof="remove"/>
	</target>
</project>

